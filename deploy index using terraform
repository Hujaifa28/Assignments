provider "aws"{
        region = "ap-south-1"
        access_key = ""
        secret_key = ""
        }
resource "aws_vpc" "my_vpc"{
         cidr_block = "10.10.0.0/16"

         tags = {
                 Name = "my_vpc"
                 }
        }
resource "aws_subnet" "sub-1"{
        vpc_id = "${aws_vpc.my_vpc.id}"
        cidr_block = "10.10.1.0/24"
        availability_zone = "ap-south-1a"
         tags = {
                 Name = "sub-1"
                 }
        }
resource "aws_internet_gateway" "igw"{
         vpc_id = "${aws_vpc.my_vpc.id}"
         tags = {
                 Name = "igw"
                 }
        }
resource "aws_route_table" "rt1"{
        vpc_id = "${aws_vpc.my_vpc.id}"
        route{
                cidr_block = "0.0.0.0/0"
                gateway_id = "${aws_internet_gateway.igw.id}"
                }
        tags = {
                 Name = "rt1"
                 }

        }
resource "aws_route_table_association" "ass"{
        subnet_id ="${aws_subnet.sub-1.id}"
        route_table_id ="${aws_route_table.rt1.id}"
        }
resource "aws_security_group" "sg-1"{
        vpc_id = "${aws_vpc.my_vpc.id}"
        ingress {
                from_port   = 22
                to_port     = 22
                protocol    = "tcp"
                cidr_blocks = ["0.0.0.0/0"]
                }
        ingress  {
                from_port   = 80
                to_port     = 80
                protocol    = "tcp"
                cidr_blocks = ["0.0.0.0/0"]
                }
        egress  {
                from_port   = 0
                to_port     = 0
                protocol    = "-1"
                cidr_blocks = ["0.0.0.0/0"]
                }
        tags = {
                 Name = "sg-1"
                 }
        }

resource "aws_instance" "my-instance"{
        ami = "ami-040acbfd65da0c993"
        instance_type ="t2.micro"
        key_name = "mykey"
        security_groups = ["${aws_security_group.sg-1.id}"]
        availability_zone = "ap-south-1a"
        subnet_id = "${aws_subnet.sub-1.id}"
        associate_public_ip_address = true
        tags = {
                 Name = "my-instance"
                 }
        user_data = <<-EOF
                        #!/bin/bash
                        yum install httpd -y
                        echo "<h1>Hello this is my first  Terraform assignment </h1>" > /var/www/html/index.html
                        sudo service httpd enable
                        sudo service httpd start
                        EOF
        }


                                    
									
